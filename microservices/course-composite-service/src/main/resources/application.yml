api:

  common:
    version: 1.0.0
    title: Sample API
    description: Description of the API...
    termsOfServiceUrl: MINE TERMS OF SERVICE URL
    license: License
    licenseUrl: MY LICENSE URL

    contact:
      name: Natalija
      url: https://github.com/NatalijaGajic
      email: nat.gaj98@mail.com

  course-composite:

    get-composite-course:
      description: Returns a composite view of the specified course id
      notes: |
        # Normal response
        If the requested course id is found the method will return information regarding:
        1. Base course information
        1. Lectures
        1. Ratings
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)
        # Expected partial and error responses
        In the following cases, only a partial response be created (used to simplify testing of error conditions)
        ## Course id 123
        200 - Ok, but no lectures and no ratings will be returned
        ## Non numerical course id
        400 - A <b>Bad Request</b> error will be returned
        ## Course id 13
        404 - A <b>Not Found</b> error will be returned
        ## Negative course ids
        422 - An <b>Unprocessable Entity</b> error will be returned


spring.mvc.pathmatch.matching-strategy: ant-path-matcher

server.port: 7000
server.error.include-message: always

app:
  course-service:
    host: localhost
    port: 7001
  lecture-service:
    host: localhost
    port: 7002
  rating-service:
    host: localhost
    port: 7004
  user-service:
    host: localhost
    port: 7005
    

---
spring.profiles: docker

server.port: 8080

app:
  course-service:
    host: course
    port: 8080
  lecture-service:
    host: lecture
    port: 8080
  rating-service:
    host: rating
    port: 8080
  user-service:
    host: user
    port: 8080
